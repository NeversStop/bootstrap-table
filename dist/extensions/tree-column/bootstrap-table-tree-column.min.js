/**
  * bootstrap-table - An extended Bootstrap table with radio, checkbox, sort, pagination, and other added features. (supports twitter bootstrap v2 and v3).
  *
  * @version v1.13.0
  * @homepage http://bootstrap-table.wenzhixin.net.cn
  * @author wenzhixin <wenzhixin2010@gmail.com> (http://wenzhixin.net.cn/)
  * @license MIT
  */

(function(a,b){if('function'==typeof define&&define.amd)define(['jquery'],b);else if('undefined'!=typeof exports)b(require('jquery'));else{b(a.jquery),a.bootstrapTableTreeColumn={exports:{}}.exports}})(this,function(a){'use strict';var b=function(a){return a&&a.__esModule?a:{default:a}}(a);b.default.extend(b.default.fn.bootstrapTable.defaults,{treeShowField:null,idField:'id',parentIdField:'pid',treeVerticalcls:'vertical',treeVerticalLastcls:'vertical last',treeSpacecls:'space',treeNodecls:'node',treeCellcls:'treenode',treeTextcls:'text',onTreeFormatter:function(a){for(var b=this,c=b.options,d=a._level||0,e=a._parent&&a._parent._level||0,f=[],g=0;g<e;g++)f.push('<i class="'+c.treeVerticalcls+'"></i>'),f.push('<i class="'+c.treeSpacecls+'"></i>');for(var g=e;g<d;g++)a._last&&g===d-1?f.push('<i class="'+c.treeVerticalLastcls+'"></i>'):f.push('<i class="'+c.treeVerticalcls+'"></i>'),f.push('<i class="'+c.treeNodecls+'"></i>');return f.join('')},onGetNodes:function(a,c){var d=this,e=[];return b.default.each(c,function(b,c){a[d.options.idField]===c[d.options.parentIdField]&&e.push(c)}),e},onCheckLeaf:function(a){return void 0===a.isLeaf?!a._nodes||!a._nodes.length:a.isLeaf},onCheckRoot:function(a){var b=this;return!a[b.options.parentIdField]}});var c=b.default.fn.bootstrapTable.Constructor,d=c.prototype.initRow,e=c.prototype.initHeader;c.prototype.initHeader=function(){var a=this;e.apply(a,Array.prototype.slice.apply(arguments));var c=a.options.treeShowField;c&&b.default.each(this.header.fields,function(b,d){if(c===d){a.treeEnable=!0;var e=a.header.formatters[b],f=[a.options.treeCellcls];return a.header.classes[b]&&f.push(a.header.classes[b].split('"')[1]||''),a.header.classes[b]=' class="'+f.join(' ')+'"',a.header.formatters[b]=function(b,c){var d=[a.options.onTreeFormatter.apply(a,[c])];return d.push('<span class="'+a.options.treeTextcls+'">'),e?d.push(e.apply(this,Array.prototype.slice.apply(arguments))):d.push(b),d.push('</span>'),d.join('')},!1}})};var f=function(a,c,e,g){var h=this,j=h.options.onGetNodes.apply(h,[a,e]);a._nodes=j,g.append(d.apply(h,[a,c,e,g]));for(var k,l=j.length-1,m=0;m<=l;m++)k=j[m],k._level=a._level+1,k._parent=a,m===l&&(k._last=1),f.apply(h,[k,b.default.inArray(k,e),e,g])};c.prototype.initRow=function(a,b,c,e){var g=this;return g.treeEnable?!!g.options.onCheckRoot.apply(g,[a,c])&&(void 0===a._level&&(a._level=0),f.apply(g,[a,b,c,e]),!0):d.apply(g,Array.prototype.slice.apply(arguments))}});